http://qiita.com/mmktomato/items/8086cccfccc15660bf65
https://blog.openshift.com/easy-full-text-search-with-sphinx/

	def process(self):
		"""
		process
		"""
		pis = db.GqlQuery('SELECT * FROM PackageInfo WHERE level=1 ORDER BY update_datetime')
		for pi in pis:
			url1 = pi.url
			section = pi.section
			result = MyUtils.urlfetch_get(url_=url1)

			last_modified = result.headers['last-modified']
			buffer = result.content.decode('utf-8', 'ignore')

			rx1 = re.compile(' href="([\w-]+?)\/"', re.DOTALL)
			for buffer in buffer.split('\n'):
				match = rx1.search(buffer)
				if match:
					genre = match.group(1)
					MyUtils.logging_info(genre)
					url = "https://packages.debian.org/" + pi.section + "/" + genre + "/"
					key_name = hashlib.sha1(url).hexdigest()
					pi_key = MyUtils.get_key('PackageInfo', key_name)
					if pi_key is None:
						pi = PackageInfo(key_name=key_name, level=2, url=url, section=section, genre=genre)
						MyUtils.db_put(pi)

			pi = PackageInfo(key_name=hashlib.sha1(url1).hexdigest(), level=1, url=url1, section=section, genre='', last_modified=last_modified)
			MyUtils.db_put(pi)
		return
